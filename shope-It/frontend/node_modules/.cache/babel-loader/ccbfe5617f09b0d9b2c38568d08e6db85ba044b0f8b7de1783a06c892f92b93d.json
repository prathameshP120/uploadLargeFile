{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const productApi = createApi({\n  reducerPath: \"productApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"/api/v1\"\n  }),\n  //this define base url for all the end point\n  endpoints: builder => ({\n    getProducts: builder.query({\n      // //here getProduct is the endpoint which is nothing but the query operation (query operation is used for fetching the data from the backend)\n      query: params => ({\n        url: \"/products\",\n        params: {\n          page: params === null || params === void 0 ? void 0 : params.page,\n          keyword: params === null || params === void 0 ? void 0 : params.keyword,\n          category: params === null || params === void 0 ? void 0 : params.category,\n          \"price[gte]\": params.min,\n          \"price[lte]\": params.max,\n          \"ratings[gte]\": params === null || params === void 0 ? void 0 : params.ratings\n        }\n      })\n    }),\n    getProductDetails: builder.query({\n      query: id => `/products/${id}`\n    })\n  })\n});\nexport const {\n  useGetProductsQuery,\n  useGetProductDetailsQuery\n} = productApi;\n\n/*\r\nAPI Slice Definition: The createApi function is used to define an API slice named productApi.\r\nThis slice includes configuration such as reducerPath, baseQuery, and endpoints.\r\n\r\nBase Query Configuration: The baseQuery is set to fetchBaseQuery({ baseUrl: \"/api/v1\" }), \r\nwhich means all API requests will start with the base URL /api/v1.\r\n\r\nEndpoints Definition: Within the endpoints function, two endpoints are defined:\r\n\r\ngetProducts: This endpoint fetches a list of products from the /products URL.\r\ngetProductDetails: This endpoint fetches the details of a specific product from the /products/${id} URL.\r\nGenerated Hooks: The createApi function generates hooks for each endpoint:\r\n\r\nuseGetProductsQuery: A hook to fetch the list of products.\r\nuseGetProductDetailsQuery: A hook to fetch the details of a specific product.\r\nUsing the Hooks in Components: These hooks can be used in React components to trigger API requests\r\nand manage the returned data.\r\n For example, you can use useGetProductsQuery in a component to fetch and display a list of products, \r\n or useGetProductDetailsQuery to fetch and display details of a specific product based on its ID.\r\n\r\n\r\n\r\n\r\n*/","map":{"version":3,"names":["createApi","fetchBaseQuery","productApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getProducts","query","params","url","page","keyword","category","min","max","ratings","getProductDetails","id","useGetProductsQuery","useGetProductDetailsQuery"],"sources":["C:/Users/patil/OneDrive/Desktop/Developmment/shope-It/frontend/src/redux/api/productsApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nexport const productApi = createApi({\r\n  reducerPath: \"productApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"/api/v1\" }), //this define base url for all the end point\r\n  endpoints: (builder) => ({\r\n    getProducts: builder.query({\r\n      // //here getProduct is the endpoint which is nothing but the query operation (query operation is used for fetching the data from the backend)\r\n      query: (params) => ({\r\n        url: \"/products\",\r\n        params: {\r\n          page: params?.page,\r\n          keyword: params?.keyword,\r\n          category: params?.category,\r\n          \"price[gte]\": params.min,\r\n          \"price[lte]\": params.max,\r\n          \"ratings[gte]\": params?.ratings,\r\n        },\r\n      }),\r\n    }),\r\n    getProductDetails: builder.query({\r\n      query: (id) => `/products/${id}`,\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetProductsQuery, useGetProductDetailsQuery } = productApi;\r\n\r\n/*\r\nAPI Slice Definition: The createApi function is used to define an API slice named productApi.\r\nThis slice includes configuration such as reducerPath, baseQuery, and endpoints.\r\n\r\nBase Query Configuration: The baseQuery is set to fetchBaseQuery({ baseUrl: \"/api/v1\" }), \r\nwhich means all API requests will start with the base URL /api/v1.\r\n\r\nEndpoints Definition: Within the endpoints function, two endpoints are defined:\r\n\r\ngetProducts: This endpoint fetches a list of products from the /products URL.\r\ngetProductDetails: This endpoint fetches the details of a specific product from the /products/${id} URL.\r\nGenerated Hooks: The createApi function generates hooks for each endpoint:\r\n\r\nuseGetProductsQuery: A hook to fetch the list of products.\r\nuseGetProductDetailsQuery: A hook to fetch the details of a specific product.\r\nUsing the Hooks in Components: These hooks can be used in React components to trigger API requests\r\nand manage the returned data.\r\n For example, you can use useGetProductsQuery in a component to fetch and display a list of products, \r\n or useGetProductDetailsQuery to fetch and display details of a specific product based on its ID.\r\n\r\n\r\n\r\n\r\n*/\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AACxE,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAAC;EAClCG,WAAW,EAAE,YAAY;EACzBC,SAAS,EAAEH,cAAc,CAAC;IAAEI,OAAO,EAAE;EAAU,CAAC,CAAC;EAAE;EACnDC,SAAS,EAAGC,OAAO,KAAM;IACvBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAC;MACzB;MACAA,KAAK,EAAGC,MAAM,KAAM;QAClBC,GAAG,EAAE,WAAW;QAChBD,MAAM,EAAE;UACNE,IAAI,EAAEF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,IAAI;UAClBC,OAAO,EAAEH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,OAAO;UACxBC,QAAQ,EAAEJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,QAAQ;UAC1B,YAAY,EAAEJ,MAAM,CAACK,GAAG;UACxB,YAAY,EAAEL,MAAM,CAACM,GAAG;UACxB,cAAc,EAAEN,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO;QAC1B;MACF,CAAC;IACH,CAAC,CAAC;IACFC,iBAAiB,EAAEX,OAAO,CAACE,KAAK,CAAC;MAC/BA,KAAK,EAAGU,EAAE,IAAK,aAAaA,EAAE;IAChC,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,mBAAmB;EAAEC;AAA0B,CAAC,GAAGnB,UAAU;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}