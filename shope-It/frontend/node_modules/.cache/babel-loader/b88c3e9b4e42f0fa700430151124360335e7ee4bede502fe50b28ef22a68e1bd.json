{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patil\\\\OneDrive\\\\Desktop\\\\Developmment\\\\shope-It\\\\frontend\\\\src\\\\components\\\\layout\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [keyword, setKeyword] = useState();\n  const navigate = useNavigate();\n  const submitHandler = e => {\n    e.preventDefault();\n    if (keyword !== null && keyword !== void 0 && keyword.trim()) {\n      //this trim will help us to remove all the blank spaces before and after the keyword\n      navigate(`/?keyword=${keyword}`);\n    } else {\n      navigate(\"/\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search_field\",\n        \"aria-describedby\": \"search_btn\",\n        className: \"form-control\",\n        placeholder: \"Enter Product Name ...\",\n        name: \"keyword\",\n        value: keyword,\n        onChange: e => setKeyword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search_btn\",\n        className: \"btn\",\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-search\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"xm44uMS78gsUL5cqSgy7vMyTd4s=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Search","_s","keyword","setKeyword","navigate","submitHandler","e","preventDefault","trim","onSubmit","children","className","type","id","placeholder","name","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/patil/OneDrive/Desktop/Developmment/shope-It/frontend/src/components/layout/Search.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Search = () => {\r\n  const [keyword, setKeyword] = useState();\r\n  const navigate = useNavigate();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword?.trim()) {\r\n      //this trim will help us to remove all the blank spaces before and after the keyword\r\n      navigate(`/?keyword=${keyword}`);\r\n    } else {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"search_field\"\r\n          aria-describedby=\"search_btn\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter Product Name ...\"\r\n          name=\"keyword\"\r\n          value={keyword}\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n        />\r\n        <button id=\"search_btn\" className=\"btn\" type=\"submit\">\r\n          <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC;EACxC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIL,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEM,IAAI,CAAC,CAAC,EAAE;MACnB;MACAJ,QAAQ,CAAC,aAAaF,OAAO,EAAE,CAAC;IAClC,CAAC,MAAM;MACLE,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC;EACD,oBACEL,OAAA;IAAMU,QAAQ,EAAEJ,aAAc;IAAAK,QAAA,eAC5BX,OAAA;MAAKY,SAAS,EAAC,aAAa;MAAAD,QAAA,gBAC1BX,OAAA;QACEa,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,cAAc;QACjB,oBAAiB,YAAY;QAC7BF,SAAS,EAAC,cAAc;QACxBG,WAAW,EAAC,wBAAwB;QACpCC,IAAI,EAAC,SAAS;QACdC,KAAK,EAAEd,OAAQ;QACfe,QAAQ,EAAGX,CAAC,IAAKH,UAAU,CAACG,CAAC,CAACY,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFvB,OAAA;QAAQc,EAAE,EAAC,YAAY;QAACF,SAAS,EAAC,KAAK;QAACC,IAAI,EAAC,QAAQ;QAAAF,QAAA,eACnDX,OAAA;UAAGY,SAAS,EAAC,cAAc;UAAC,eAAY;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACrB,EAAA,CA/BID,MAAM;EAAA,QAEOH,WAAW;AAAA;AAAA0B,EAAA,GAFxBvB,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}