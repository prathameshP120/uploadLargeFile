{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false\n};\nexport const userSlice = createSlice({\n  initialState,\n  name: \"userSlice\",\n  reducers: {\n    setUser(state, action) {\n      state.user = action.payload;\n    },\n    setIsAuthenticated(state, action) {\n      state.isAuthenticated = action.payload;\n    }\n  }\n});\nexport default userSlice.reducer;\nexport const {\n  setIsAuthenticated,\n  setUser\n} = userSlice.actions; // now we will the setUser to set the value in the state and before that we have to add this reducer in store.js file","map":{"version":3,"names":["createSlice","initialState","user","isAuthenticated","userSlice","name","reducers","setUser","state","action","payload","setIsAuthenticated","reducer","actions"],"sources":["C:/Users/patil/OneDrive/Desktop/Developmment/shope-It/frontend/src/redux/features/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  initialState,\r\n  name: \"userSlice\",\r\n  reducers: {\r\n    setUser(state, action) {\r\n      state.user = action.payload;\r\n    },\r\n    setIsAuthenticated(state, action) {\r\n      state.isAuthenticated = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const { setIsAuthenticated, setUser } = userSlice.actions; // now we will the setUser to set the value in the state and before that we have to add this reducer in store.js file\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,eAAe,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCC,YAAY;EACZI,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrBD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,kBAAkBA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAChCD,KAAK,CAACL,eAAe,GAAGM,MAAM,CAACC,OAAO;IACxC;EACF;AACF,CAAC,CAAC;AAEF,eAAeN,SAAS,CAACQ,OAAO;AAEhC,OAAO,MAAM;EAAED,kBAAkB;EAAEJ;AAAQ,CAAC,GAAGH,SAAS,CAACS,OAAO,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}