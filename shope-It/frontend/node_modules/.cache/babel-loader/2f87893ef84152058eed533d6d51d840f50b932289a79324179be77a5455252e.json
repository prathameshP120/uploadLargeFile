{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { setIsAuthenticated, setUser } from \"../features/userSlice\";\nexport const userApi = createApi({\n  reducerPath: \"userApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"/api/v1\"\n  }),\n  endpoints: builder => ({\n    getMe: builder.query({\n      query: () => `/me`,\n      transformResponse: result => result.user,\n      async onQueryStarted(args, {\n        dispatch,\n        queryFulfilled\n      }) {\n        try {\n          const {\n            data\n          } = await queryFulfilled;\n          dispatch(setUser(data));\n          dispatch(setIsAuthenticated(true));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }),\n    updateProfile: builder.mutation({\n      query(body) {\n        return {\n          url: \"/me/update\",\n          method: \"PUT\",\n          body\n        };\n      },\n      invalidatesTags: [\"User\"]\n    })\n  })\n});\nexport const {\n  useGetMeQuery\n} = userApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","setIsAuthenticated","setUser","userApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getMe","query","transformResponse","result","user","onQueryStarted","args","dispatch","queryFulfilled","data","error","console","log","updateProfile","mutation","body","url","method","invalidatesTags","useGetMeQuery"],"sources":["C:/Users/patil/OneDrive/Desktop/Developmment/shope-It/frontend/src/redux/api/userApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { setIsAuthenticated, setUser } from \"../features/userSlice\";\r\n\r\nexport const userApi = createApi({\r\n  reducerPath: \"userApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: \"/api/v1\" }),\r\n  endpoints: (builder) => ({\r\n    getMe: builder.query({\r\n      query: () => `/me`,\r\n      transformResponse: (result) => result.user,\r\n      async onQueryStarted(args, { dispatch, queryFulfilled }) {\r\n        try {\r\n          const { data } = await queryFulfilled;\r\n          dispatch(setUser(data));\r\n          dispatch(setIsAuthenticated(true));\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      },\r\n    }),\r\n    updateProfile: builder.mutation({\r\n      query(body) {\r\n        return {\r\n          url: \"/me/update\",\r\n          method: \"PUT\",\r\n          body,\r\n        };\r\n      },\r\n      invalidatesTags: [\"User\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetMeQuery } = userApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AACxE,SAASC,kBAAkB,EAAEC,OAAO,QAAQ,uBAAuB;AAEnE,OAAO,MAAMC,OAAO,GAAGJ,SAAS,CAAC;EAC/BK,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAEL,cAAc,CAAC;IAAEM,OAAO,EAAE;EAAU,CAAC,CAAC;EACjDC,SAAS,EAAGC,OAAO,KAAM;IACvBC,KAAK,EAAED,OAAO,CAACE,KAAK,CAAC;MACnBA,KAAK,EAAEA,CAAA,KAAM,KAAK;MAClBC,iBAAiB,EAAGC,MAAM,IAAKA,MAAM,CAACC,IAAI;MAC1C,MAAMC,cAAcA,CAACC,IAAI,EAAE;QAAEC,QAAQ;QAAEC;MAAe,CAAC,EAAE;QACvD,IAAI;UACF,MAAM;YAAEC;UAAK,CAAC,GAAG,MAAMD,cAAc;UACrCD,QAAQ,CAACd,OAAO,CAACgB,IAAI,CAAC,CAAC;UACvBF,QAAQ,CAACf,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC,CAAC,OAAOkB,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACpB;MACF;IACF,CAAC,CAAC;IACFG,aAAa,EAAEd,OAAO,CAACe,QAAQ,CAAC;MAC9Bb,KAAKA,CAACc,IAAI,EAAE;QACV,OAAO;UACLC,GAAG,EAAE,YAAY;UACjBC,MAAM,EAAE,KAAK;UACbF;QACF,CAAC;MACH,CAAC;MACDG,eAAe,EAAE,CAAC,MAAM;IAC1B,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC;AAAc,CAAC,GAAGzB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}